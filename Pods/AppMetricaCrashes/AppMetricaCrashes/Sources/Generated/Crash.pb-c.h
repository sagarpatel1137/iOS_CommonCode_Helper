/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: Crash.proto */

#ifndef PROTOBUF_C_Crash_2eproto__INCLUDED
#define PROTOBUF_C_Crash_2eproto__INCLUDED

#include <AppMetricaProtobuf/AppMetricaProtobuf.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Ama__IOSCrashReport Ama__IOSCrashReport;
typedef struct Ama__IOSCrashReport__BytesPair Ama__IOSCrashReport__BytesPair;
typedef struct Ama__IOSCrashReport__Info Ama__IOSCrashReport__Info;
typedef struct Ama__IOSCrashReport__Info__VirtualMachineInfo Ama__IOSCrashReport__Info__VirtualMachineInfo;
typedef struct Ama__IOSCrashReport__BinaryImage Ama__IOSCrashReport__BinaryImage;
typedef struct Ama__IOSCrashReport__System Ama__IOSCrashReport__System;
typedef struct Ama__IOSCrashReport__System__Memory Ama__IOSCrashReport__System__Memory;
typedef struct Ama__IOSCrashReport__System__ApplicationStats Ama__IOSCrashReport__System__ApplicationStats;
typedef struct Ama__IOSCrashReport__Crash Ama__IOSCrashReport__Crash;
typedef struct Ama__IOSCrashReport__Crash__Backtrace Ama__IOSCrashReport__Crash__Backtrace;
typedef struct Ama__IOSCrashReport__Crash__Backtrace__Frame Ama__IOSCrashReport__Crash__Backtrace__Frame;
typedef struct Ama__IOSCrashReport__Crash__Error Ama__IOSCrashReport__Crash__Error;
typedef struct Ama__IOSCrashReport__Crash__Error__Mach Ama__IOSCrashReport__Crash__Error__Mach;
typedef struct Ama__IOSCrashReport__Crash__Error__Signal Ama__IOSCrashReport__Crash__Error__Signal;
typedef struct Ama__IOSCrashReport__Crash__Error__NsException Ama__IOSCrashReport__Crash__Error__NsException;
typedef struct Ama__IOSCrashReport__Crash__Error__CppException Ama__IOSCrashReport__Crash__Error__CppException;
typedef struct Ama__IOSCrashReport__Crash__Error__NonFatal Ama__IOSCrashReport__Crash__Error__NonFatal;
typedef struct Ama__IOSCrashReport__Crash__Error__NonFatal__Custom Ama__IOSCrashReport__Crash__Error__NonFatal__Custom;
typedef struct Ama__IOSCrashReport__Crash__Error__NonFatal__VirtualMachineError Ama__IOSCrashReport__Crash__Error__NonFatal__VirtualMachineError;
typedef struct Ama__IOSCrashReport__Crash__Error__NonFatal__NsError Ama__IOSCrashReport__Crash__Error__NonFatal__NsError;
typedef struct Ama__IOSCrashReport__Crash__Error__VirtualMachineCrash Ama__IOSCrashReport__Crash__Error__VirtualMachineCrash;
typedef struct Ama__IOSCrashReport__Crash__Thread Ama__IOSCrashReport__Crash__Thread;
typedef struct Ama__IOSCrashReport__Crash__Thread__Registers Ama__IOSCrashReport__Crash__Thread__Registers;
typedef struct Ama__IOSCrashReport__Crash__Thread__Registers__Register Ama__IOSCrashReport__Crash__Thread__Registers__Register;
typedef struct Ama__IOSCrashReport__Crash__Thread__Stack Ama__IOSCrashReport__Crash__Thread__Stack;


/* --- enums --- */

typedef enum _Ama__IOSCrashReport__System__BuildType {
  AMA__IOSCRASH_REPORT__SYSTEM__BUILD_TYPE__UNKNOWN = 0,
  /*
   * Build for simulator
   */
  AMA__IOSCRASH_REPORT__SYSTEM__BUILD_TYPE__SIMULATOR = 1,
  /*
   * Build with DEBUG define (only for internal builds where AppMetrica integrated by sources)
   */
  AMA__IOSCRASH_REPORT__SYSTEM__BUILD_TYPE__DEBUG = 2,
  /*
   * Build for AdHoc/Testflight
   */
  AMA__IOSCRASH_REPORT__SYSTEM__BUILD_TYPE__TEST = 3,
  /*
   * Build for AppStore
   */
  AMA__IOSCRASH_REPORT__SYSTEM__BUILD_TYPE__APP_STORE = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(AMA__IOSCRASH_REPORT__SYSTEM__BUILD_TYPE)
} Ama__IOSCrashReport__System__BuildType;
typedef enum _Ama__IOSCrashReport__Crash__Error__NonFatal__NonFatalType {
  /*
   *Error with custom grouping based on identifier field
   */
  AMA__IOSCRASH_REPORT__CRASH__ERROR__NON_FATAL__NON_FATAL_TYPE__CUSTOM = 0,
  /*
   *Error with default grouping based on stacktrace
   */
  AMA__IOSCRASH_REPORT__CRASH__ERROR__NON_FATAL__NON_FATAL_TYPE__NSERROR = 1,
  /*
   *Error from virtual machine like sdk plugins (flutter, unity, etc) and default grouping based on stacktrace
   */
  AMA__IOSCRASH_REPORT__CRASH__ERROR__NON_FATAL__NON_FATAL_TYPE__VIRTUAL_MACHINE = 2,
  /*
   *Error from virtual machine like sdk plugin (flutter, unity, etc) and custom crouping based on identifier field
   */
  AMA__IOSCRASH_REPORT__CRASH__ERROR__NON_FATAL__NON_FATAL_TYPE__VIRTUAL_MACHINE_CUSTOM = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(AMA__IOSCRASH_REPORT__CRASH__ERROR__NON_FATAL__NON_FATAL_TYPE)
} Ama__IOSCrashReport__Crash__Error__NonFatal__NonFatalType;
/*
 * All possible crash types handled by KSCrash
 */
typedef enum _Ama__IOSCrashReport__Crash__Error__CrashType {
  AMA__IOSCRASH_REPORT__CRASH__ERROR__CRASH_TYPE__MACH_EXCEPTION = 0,
  AMA__IOSCRASH_REPORT__CRASH__ERROR__CRASH_TYPE__SIGNAL = 1,
  AMA__IOSCRASH_REPORT__CRASH__ERROR__CRASH_TYPE__CPP_EXCEPTION = 2,
  /*
   * Native ObjC exceptions
   */
  AMA__IOSCRASH_REPORT__CRASH__ERROR__CRASH_TYPE__NSEXCEPTION = 3,
  AMA__IOSCRASH_REPORT__CRASH__ERROR__CRASH_TYPE__MAIN_THREAD_DEADLOCK = 4,
  AMA__IOSCRASH_REPORT__CRASH__ERROR__CRASH_TYPE__USER_REPORTED = 5,
  /*
   * Errors
   */
  AMA__IOSCRASH_REPORT__CRASH__ERROR__CRASH_TYPE__NON_FATAL = 6,
  /*
   *Crashes from plugins
   */
  AMA__IOSCRASH_REPORT__CRASH__ERROR__CRASH_TYPE__VIRTUAL_MACHINE_CRASH = 7,
  /*
   *Error with default grouping
   */
  AMA__IOSCRASH_REPORT__CRASH__ERROR__CRASH_TYPE__VIRTUAL_MACHINE_ERROR = 8,
  /*
   *Error group is defined by user-defined identifier
   */
  AMA__IOSCRASH_REPORT__CRASH__ERROR__CRASH_TYPE__VIRTUAL_MACHINE_CUSTOM_ERROR = 9
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(AMA__IOSCRASH_REPORT__CRASH__ERROR__CRASH_TYPE)
} Ama__IOSCrashReport__Crash__Error__CrashType;
typedef enum _Ama__IOSCrashReport__Crash__Thread__Stack__GrowDirection {
  AMA__IOSCRASH_REPORT__CRASH__THREAD__STACK__GROW_DIRECTION__PLUS = 0,
  AMA__IOSCRASH_REPORT__CRASH__THREAD__STACK__GROW_DIRECTION__MINUS = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(AMA__IOSCRASH_REPORT__CRASH__THREAD__STACK__GROW_DIRECTION)
} Ama__IOSCrashReport__Crash__Thread__Stack__GrowDirection;

/* --- messages --- */

struct  Ama__IOSCrashReport__BytesPair
{
  ProtobufCMessage base;
  protobuf_c_boolean has_key;
  ProtobufCBinaryData key;
  protobuf_c_boolean has_value;
  ProtobufCBinaryData value;
};
#define AMA__IOSCRASH_REPORT__BYTES_PAIR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__bytes_pair__descriptor) \
, 0, {0,NULL}, 0, {0,NULL} }


struct  Ama__IOSCrashReport__Info__VirtualMachineInfo
{
  ProtobufCMessage base;
  /*
   * Plugin name (flutter, unity, etc)
   */
  protobuf_c_boolean has_virtual_machine;
  ProtobufCBinaryData virtual_machine;
  protobuf_c_boolean has_virtual_machine_version;
  ProtobufCBinaryData virtual_machine_version;
  /*
   *Some key-value attributes defined by plugins
   */
  size_t n_plugin_environment;
  Ama__IOSCrashReport__BytesPair **plugin_environment;
};
#define AMA__IOSCRASH_REPORT__INFO__VIRTUAL_MACHINE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__info__virtual_machine_info__descriptor) \
, 0, {0,NULL}, 0, {0,NULL}, 0,NULL }


struct  Ama__IOSCrashReport__Info
{
  ProtobufCMessage base;
  /*
   * Version of crash reporter
   */
  protobuf_c_boolean has_version;
  ProtobufCBinaryData version;
  /*
   * Identifier of crash
   */
  ProtobufCBinaryData id;
  /*
   * required bytes process_name (removed: duplicates field in System)
   */
  /*
   * Timestamp of crash (UTC)
   */
  int64_t timestamp;
  Ama__IOSCrashReport__Info__VirtualMachineInfo *virtual_machine_info;
};
#define AMA__IOSCRASH_REPORT__INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__info__descriptor) \
, 0, {0,NULL}, {0,NULL}, 0, NULL }


struct  Ama__IOSCrashReport__BinaryImage
{
  ProtobufCMessage base;
  /*
   * Base address in memory (KSCrash: image_addr)
   */
  uint64_t address;
  /*
   * required uint64 image_vmaddr (removed: unused)
   */
  /*
   * Size in bytes (KSCrash: image_size)
   */
  uint64_t size;
  /*
   * CPU_TYPE_* from https://opensource.apple.com/source/cctools/cctools-836/include/mach/machine.h
   */
  int32_t cpu_type;
  /*
   * CPU_SUBTYPE_* from https://opensource.apple.com/source/cctools/cctools-836/include/mach/machine.h
   */
  int32_t cpu_subtype;
  /*
   * First part of version
   */
  int32_t major_version;
  /*
   * Second part of version
   */
  int32_t minor_version;
  /*
   * Third part of version
   */
  int32_t revision_version;
  /*
   * Absolute path to binary image (KSCrash: name)
   */
  ProtobufCBinaryData path;
  /*
   * Raw 16 bytes of binary image UUID
   */
  ProtobufCBinaryData uuid;
  /*
   * 'message' from __crash_info section of binary (https://opensource.apple.com/source/WebKit2/WebKit2-7605.3.8/Platform/spi/Cocoa/CrashReporterClientSPI.h)
   */
  protobuf_c_boolean has_crash_info_message;
  ProtobufCBinaryData crash_info_message;
  /*
   * 'message2' from __crash_info section of binary (see link above)
   */
  protobuf_c_boolean has_crash_info_message2;
  ProtobufCBinaryData crash_info_message2;
};
#define AMA__IOSCRASH_REPORT__BINARY_IMAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__binary_image__descriptor) \
, 0, 0, 0, 0, 0, 0, 0, {0,NULL}, {0,NULL}, 0, {0,NULL}, 0, {0,NULL} }


struct  Ama__IOSCrashReport__System__Memory
{
  ProtobufCMessage base;
  /*
   * Device memory size in bytes (full, base on sysctl('hw.memsize'))
   */
  uint64_t size;
  /*
   * Device memory size in bytes (active + inactive + wire + free, based on host_statistics)
   */
  uint64_t usable;
  /*
   * Device memory size in bytes (free, based on host_statistics)
   */
  uint64_t free;
};
#define AMA__IOSCRASH_REPORT__SYSTEM__MEMORY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__system__memory__descriptor) \
, 0, 0, 0 }


struct  Ama__IOSCrashReport__System__ApplicationStats
{
  ProtobufCMessage base;
  /*
   * Before/after entering forground app is in inactive state (https://nda.ya.ru/3UXTo2)
   */
  protobuf_c_boolean application_active;
  /*
   * App was in foreground when crashed
   */
  protobuf_c_boolean application_in_foreground;
  uint32_t launches_since_last_crash;
  uint32_t sessions_since_last_crash;
  /*
   * Acount of time (in seconds) spent in foreground state of application since last launch
   */
  double active_time_since_last_crash;
  /*
   * As previous one but in background state
   */
  double background_time_since_last_crash;
  /*
   * Sessions are calculated by KSCrash logic
   */
  uint32_t sessions_since_launch;
  double active_time_since_launch;
  double background_time_since_launch;
};
#define AMA__IOSCRASH_REPORT__SYSTEM__APPLICATION_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__system__application_stats__descriptor) \
, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  Ama__IOSCrashReport__System
{
  ProtobufCMessage base;
  /*
   * required bytes system_name (removed: duplicates report protocol) OS name (i.e. iOS/tvOS)
   * required bytes system_version (removed: duplicates report protocol) OS version (i.e. 12.1.2/10.2)
   * required bytes machine (removed: duplicates report protocol) Device name (i.e. iPhone11,2)
   * required bytes model (removed: duplicates report protocol) For simulator it's "simulator" here
   */
  /*
   * Kernel version like an output of `uname -v`
   */
  protobuf_c_boolean has_kernel_version;
  ProtobufCBinaryData kernel_version;
  /*
   * Build number of OS (i.e 14D27) (KSCrash: os_version)
   */
  protobuf_c_boolean has_os_build_number;
  ProtobufCBinaryData os_build_number;
  /*
   * required bool jailbroken (removed: unused)
   */
  /*
   * Timestamp of device boot (UTC)
   */
  protobuf_c_boolean has_boot_timestamp;
  int64_t boot_timestamp;
  /*
   * Timestamp of app start (UTC)
   */
  protobuf_c_boolean has_app_start_timestamp;
  int64_t app_start_timestamp;
  /*
   * Absolute path to app binary (KSCrash: CFBundleExecutablePath)
   */
  protobuf_c_boolean has_executable_path;
  ProtobufCBinaryData executable_path;
  /*
   * required bytes CFBundleExecutable (removed: last path component of executable_path)
   * required bytes bundle_identifier (removed: duplicates report protocol) Application bundle identifier (KSCrash: CFBundleIdentifier) (ClickHouse: AppID)
   * required bytes CFBundleName (removed: unused)
   * required bytes app_build_number (removed: duplicates report protocol) Build number of application (KSCrash: CFBundleVersion)
   * required bytes app_version (removed: duplicates report protocol) Version of application (KSCrash: CFBundleShortVersionString)
   * required bytes app_uuid (removed: unused)
   */
  /*
   * String representation of sysctl('hw.cputype') and sysctl('hw.cpusubtype'). See https://opensource.apple.com/source/cctools/cctools-836/include/mach/machine.h and KSCrash
   */
  protobuf_c_boolean has_cpu_arch;
  ProtobufCBinaryData cpu_arch;
  /*
   * CPU_TYPE_* from https://opensource.apple.com/source/cctools/cctools-836/include/mach/machine.h
   */
  protobuf_c_boolean has_cpu_type;
  int32_t cpu_type;
  /*
   * CPU_SUBTYPE_* from https://opensource.apple.com/source/cctools/cctools-836/include/mach/machine.h
   */
  protobuf_c_boolean has_cpu_subtype;
  int32_t cpu_subtype;
  /*
   * Binary compilation arch (see cpu_type)
   */
  protobuf_c_boolean has_binary_cpu_type;
  int32_t binary_cpu_type;
  /*
   * Binary compilation arch (see cpu_subtype)
   */
  protobuf_c_boolean has_binary_cpu_subtype;
  int32_t binary_cpu_subtype;
  /*
   * required bytes time_zone (removed: unused)
   */
  /*
   * Name of app process
   */
  protobuf_c_boolean has_process_name;
  ProtobufCBinaryData process_name;
  /*
   * PID of app process
   */
  protobuf_c_boolean has_process_id;
  int64_t process_id;
  /*
   * PID of parrent process
   */
  protobuf_c_boolean has_parent_process_id;
  int64_t parent_process_id;
  /*
   * required bytes device_app_hash (removed: unused)
   */
  /*
   * Type of application build
   */
  protobuf_c_boolean has_build_type;
  Ama__IOSCrashReport__System__BuildType build_type;
  /*
   * Device storage size in bytes (full)
   */
  protobuf_c_boolean has_storage;
  int64_t storage;
  /*
   * Information about device memory state
   */
  Ama__IOSCrashReport__System__Memory *memory;
  /*
   * Application usage information
   */
  Ama__IOSCrashReport__System__ApplicationStats *application_stats;
};
#define AMA__IOSCRASH_REPORT__SYSTEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__system__descriptor) \
, 0, {0,NULL}, 0, {0,NULL}, 0, 0, 0, 0, 0, {0,NULL}, 0, {0,NULL}, 0, 0, 0, 0, 0, 0, 0, 0, 0, {0,NULL}, 0, 0, 0, 0, 0, AMA__IOSCRASH_REPORT__SYSTEM__BUILD_TYPE__UNKNOWN, 0, 0, NULL, NULL }


struct  Ama__IOSCrashReport__Crash__Backtrace__Frame
{
  ProtobufCMessage base;
  /*
   * Absolute address, required for native crashes
   */
  protobuf_c_boolean has_instruction_addr;
  uint64_t instruction_addr;
  protobuf_c_boolean has_object_name;
  ProtobufCBinaryData object_name;
  protobuf_c_boolean has_object_addr;
  uint64_t object_addr;
  /*
   * Full representation of "function". Class name and method name are combined here if present
   */
  protobuf_c_boolean has_symbol_name;
  ProtobufCBinaryData symbol_name;
  protobuf_c_boolean has_symbol_addr;
  uint64_t symbol_addr;
  /*
   * For crashes and errors from native code and virtual machines (plugins)
   */
  protobuf_c_boolean has_line_of_code;
  uint64_t line_of_code;
  /*
   * For crashes and errors from native code and virtual machines (plugins)
   */
  protobuf_c_boolean has_source_file_name;
  ProtobufCBinaryData source_file_name;
  /*
   * For crashes and errors from plugins only
   */
  protobuf_c_boolean has_class_name;
  ProtobufCBinaryData class_name;
  /*
   * For crashes and errors from plugins only - in plugins we have more details than symbol name
   */
  protobuf_c_boolean has_method_name;
  ProtobufCBinaryData method_name;
  /*
   * For crashes and errors from plugins only - in plugins we have more details than symbol name
   */
  protobuf_c_boolean has_column_of_code;
  uint32_t column_of_code;
};
#define AMA__IOSCRASH_REPORT__CRASH__BACKTRACE__FRAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__backtrace__frame__descriptor) \
, 0, 0, 0, {0,NULL}, 0, 0, 0, {0,NULL}, 0, 0, 0, 0, 0, {0,NULL}, 0, {0,NULL}, 0, {0,NULL}, 0, 0 }


struct  Ama__IOSCrashReport__Crash__Backtrace
{
  ProtobufCMessage base;
  /*
   * Backtrace frames (KSCrash: contents)
   */
  size_t n_frames;
  Ama__IOSCrashReport__Crash__Backtrace__Frame **frames;
};
#define AMA__IOSCRASH_REPORT__CRASH__BACKTRACE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__backtrace__descriptor) \
, 0,NULL }


struct  Ama__IOSCrashReport__Crash__Error__Mach
{
  ProtobufCMessage base;
  /*
   * Mach exception type from https://opensource.apple.com/source/xnu/xnu-792/osfmk/mach/exception_types.h (KSCrash: exception)
   */
  int32_t exception_type;
  /*
   * optional bytes exception_name (removed: use exception_type)
   */
  /*
   * Exception code from https://opensource.apple.com/source/xnu/xnu-792/osfmk/mach/kern_return.h
   */
  int64_t code;
  /*
   * optional bytes code_name (removed: use code)
   */
  int64_t subcode;
};
#define AMA__IOSCRASH_REPORT__CRASH__ERROR__MACH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__error__mach__descriptor) \
, 0, 0, 0 }


struct  Ama__IOSCrashReport__Crash__Error__Signal
{
  ProtobufCMessage base;
  /*
   * System signal (i.e. SIGPIPE, SIGKILL, SIGABRT)
   */
  int32_t signal;
  /*
   * required bytes name (removed: use signal)
   */
  /*
   * Signal code from https://opensource.apple.com/source/xnu/xnu-4570.31.3/bsd/sys/signal.h (see "Values for si_code")
   */
  int32_t code;
};
#define AMA__IOSCRASH_REPORT__CRASH__ERROR__SIGNAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__error__signal__descriptor) \
, 0, 0 }


struct  Ama__IOSCrashReport__Crash__Error__NsException
{
  ProtobufCMessage base;
  /*
   * Name field of NSException object
   */
  protobuf_c_boolean has_name;
  ProtobufCBinaryData name;
  /*
   * String representation of user info field(which is a dictionary) of NSException object
   */
  protobuf_c_boolean has_user_info;
  ProtobufCBinaryData user_info;
};
#define AMA__IOSCRASH_REPORT__CRASH__ERROR__NS_EXCEPTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__error__ns_exception__descriptor) \
, 0, {0,NULL}, 0, {0,NULL} }


struct  Ama__IOSCrashReport__Crash__Error__CppException
{
  ProtobufCMessage base;
  /*
   * Name of C++ crash from __cxxabiv1::__cxa_current_exception_type()->name()
   */
  protobuf_c_boolean has_name;
  ProtobufCBinaryData name;
};
#define AMA__IOSCRASH_REPORT__CRASH__ERROR__CPP_EXCEPTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__error__cpp_exception__descriptor) \
, 0, {0,NULL} }


struct  Ama__IOSCrashReport__Crash__Error__NonFatal__Custom
{
  ProtobufCMessage base;
  /*
   * Identifier of an error to group by
   */
  ProtobufCBinaryData identifier;
  /*
   * Short description of an error
   */
  protobuf_c_boolean has_message;
  ProtobufCBinaryData message;
  /*
   * Name of the error class
   */
  protobuf_c_boolean has_class_name;
  ProtobufCBinaryData class_name;
};
#define AMA__IOSCRASH_REPORT__CRASH__ERROR__NON_FATAL__CUSTOM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__error__non_fatal__custom__descriptor) \
, {0,NULL}, 0, {0,NULL}, 0, {0,NULL} }


struct  Ama__IOSCrashReport__Crash__Error__NonFatal__VirtualMachineError
{
  ProtobufCMessage base;
  protobuf_c_boolean has_class_name;
  ProtobufCBinaryData class_name;
  protobuf_c_boolean has_message;
  ProtobufCBinaryData message;
};
#define AMA__IOSCRASH_REPORT__CRASH__ERROR__NON_FATAL__VIRTUAL_MACHINE_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__error__non_fatal__virtual_machine_error__descriptor) \
, 0, {0,NULL}, 0, {0,NULL} }


struct  Ama__IOSCrashReport__Crash__Error__NonFatal__NsError
{
  ProtobufCMessage base;
  /*
   * Error domain (see NSError)
   */
  ProtobufCBinaryData domain;
  /*
   * Error code (see NSError)
   */
  int64_t code;
};
#define AMA__IOSCRASH_REPORT__CRASH__ERROR__NON_FATAL__NS_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__error__non_fatal__ns_error__descriptor) \
, {0,NULL}, 0 }


struct  Ama__IOSCrashReport__Crash__Error__NonFatal
{
  ProtobufCMessage base;
  /*
   * Type of non-fatal
   */
  Ama__IOSCrashReport__Crash__Error__NonFatal__NonFatalType type;
  /*
   * JSON-string with plain (single-level) map
   */
  protobuf_c_boolean has_parameters;
  ProtobufCBinaryData parameters;
  /*
   * Call stack provided by user
   */
  Ama__IOSCrashReport__Crash__Backtrace *backtrace;
  /*
   * Specific information for type in (CUSTOM, VIRTUAL_MACHINE_CUSTOM)
   */
  Ama__IOSCrashReport__Crash__Error__NonFatal__Custom *custom;
  /*
   * Specific information for type = NSERROR
   */
  Ama__IOSCrashReport__Crash__Error__NonFatal__NsError *nserror;
  /*
   * Specific information for type = VIRTUAL_MACHINE
   */
  Ama__IOSCrashReport__Crash__Error__NonFatal__VirtualMachineError *virtual_machine_error;
};
#define AMA__IOSCRASH_REPORT__CRASH__ERROR__NON_FATAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__error__non_fatal__descriptor) \
, AMA__IOSCRASH_REPORT__CRASH__ERROR__NON_FATAL__NON_FATAL_TYPE__CUSTOM, 0, {0,NULL}, NULL, NULL, NULL, NULL }


struct  Ama__IOSCrashReport__Crash__Error__VirtualMachineCrash
{
  ProtobufCMessage base;
  protobuf_c_boolean has_class_name;
  ProtobufCBinaryData class_name;
  protobuf_c_boolean has_message;
  ProtobufCBinaryData message;
  Ama__IOSCrashReport__Crash__Error__VirtualMachineCrash *cause;
};
#define AMA__IOSCRASH_REPORT__CRASH__ERROR__VIRTUAL_MACHINE_CRASH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__error__virtual_machine_crash__descriptor) \
, 0, {0,NULL}, 0, {0,NULL}, NULL }


struct  Ama__IOSCrashReport__Crash__Error
{
  ProtobufCMessage base;
  /*
   * Address that caused the fault
   */
  protobuf_c_boolean has_address;
  uint64_t address;
  /*
   * Short description of why the crash occurred (https://nda.ya.ru/t/6D_340h374ZCPk)
   */
  protobuf_c_boolean has_reason;
  ProtobufCBinaryData reason;
  /*
   * Type
   */
  Ama__IOSCrashReport__Crash__Error__CrashType type;
  /*
   * Mach information is always available for iOS crashes, but may be empty for crashes from plugins
   */
  Ama__IOSCrashReport__Crash__Error__Mach *mach;
  /*
   * Signal information is always available
   */
  Ama__IOSCrashReport__Crash__Error__Signal *signal;
  /*
   * Available if type == NSEXCEPTION
   */
  Ama__IOSCrashReport__Crash__Error__NsException *nsexception;
  /*
   * Available if type == CPP_EXCEPTION
   */
  Ama__IOSCrashReport__Crash__Error__CppException *cpp_exception;
  /*
   * Chain of errors. Available if type == NON_FATAL. Single item possible if type == VIRTUAL_MACHINE_ERROR
   */
  size_t n_non_fatals_chain;
  Ama__IOSCrashReport__Crash__Error__NonFatal **non_fatals_chain;
  /*
   *Available if type in {VIRTUAL_MACHINE_CRASH}
   */
  Ama__IOSCrashReport__Crash__Error__VirtualMachineCrash *virtual_machine_crash;
};
#define AMA__IOSCRASH_REPORT__CRASH__ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__error__descriptor) \
, 0, 0, 0, {0,NULL}, AMA__IOSCRASH_REPORT__CRASH__ERROR__CRASH_TYPE__MACH_EXCEPTION, NULL, NULL, NULL, NULL, 0,NULL, NULL }


struct  Ama__IOSCrashReport__Crash__Thread__Registers__Register
{
  ProtobufCMessage base;
  /*
   * Name of register (i.e. fp, x0, x11)
   */
  ProtobufCBinaryData name;
  uint64_t value;
};
#define AMA__IOSCRASH_REPORT__CRASH__THREAD__REGISTERS__REGISTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__thread__registers__register__descriptor) \
, {0,NULL}, 0 }


struct  Ama__IOSCrashReport__Crash__Thread__Registers
{
  ProtobufCMessage base;
  size_t n_basic;
  Ama__IOSCrashReport__Crash__Thread__Registers__Register **basic;
  /*
   * i.e. exception, esr, far
   */
  size_t n_exception;
  Ama__IOSCrashReport__Crash__Thread__Registers__Register **exception;
};
#define AMA__IOSCRASH_REPORT__CRASH__THREAD__REGISTERS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__thread__registers__descriptor) \
, 0,NULL, 0,NULL }


struct  Ama__IOSCrashReport__Crash__Thread__Stack
{
  ProtobufCMessage base;
  Ama__IOSCrashReport__Crash__Thread__Stack__GrowDirection grow_direction;
  uint64_t dump_start;
  uint64_t dump_end;
  uint64_t stack_pointer;
  protobuf_c_boolean overflow;
  /*
   * Bytes of thread stack
   */
  protobuf_c_boolean has_contents;
  ProtobufCBinaryData contents;
};
#define AMA__IOSCRASH_REPORT__CRASH__THREAD__STACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__thread__stack__descriptor) \
, AMA__IOSCRASH_REPORT__CRASH__THREAD__STACK__GROW_DIRECTION__PLUS, 0, 0, 0, 0, 0, {0,NULL} }


struct  Ama__IOSCrashReport__Crash__Thread
{
  ProtobufCMessage base;
  Ama__IOSCrashReport__Crash__Backtrace *backtrace;
  Ama__IOSCrashReport__Crash__Thread__Registers *registers;
  /*
   * Dump of thread stack (memory bytes before and after SP(stack pointer))
   */
  Ama__IOSCrashReport__Crash__Thread__Stack *stack;
  /*
   * Thread index
   */
  uint32_t index;
  /*
   * Wheter thread has crashed
   */
  protobuf_c_boolean crashed;
  /*
   * required bool current_thread (removed: unused)
   */
  /*
   * Name of the thread
   */
  protobuf_c_boolean has_name;
  ProtobufCBinaryData name;
  /*
   * Name of the dispatch queue (KSCrash: dispatch_queue)
   */
  protobuf_c_boolean has_dispatch_queue_name;
  ProtobufCBinaryData dispatch_queue_name;
};
#define AMA__IOSCRASH_REPORT__CRASH__THREAD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__thread__descriptor) \
, NULL, NULL, NULL, 0, 0, 0, {0,NULL}, 0, {0,NULL} }


struct  Ama__IOSCrashReport__Crash
{
  ProtobufCMessage base;
  /*
   * General crash information
   */
  Ama__IOSCrashReport__Crash__Error *error;
  /*
   * State of threads
   */
  size_t n_threads;
  Ama__IOSCrashReport__Crash__Thread **threads;
};
#define AMA__IOSCRASH_REPORT__CRASH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__crash__descriptor) \
, NULL, 0,NULL }


struct  Ama__IOSCrashReport
{
  ProtobufCMessage base;
  /*
   * Crash meta-info
   */
  Ama__IOSCrashReport__Info *info;
  /*
   * Loaded binary images
   */
  size_t n_binary_images;
  Ama__IOSCrashReport__BinaryImage **binary_images;
  /*
   * required Process process (removed: unused, because we don't handle zombies)
   */
  /*
   * Device, OS and app state
   */
  Ama__IOSCrashReport__System *system;
  /*
   * required bytes user_info (removed: used only by AppMetrica SDK to match session) JSON string with AppMetrica state info
   * required Debug debug (removed: contains console log, but we don't activate this feature of KSCrash)
   */
  Ama__IOSCrashReport__Crash *crash;
};
#define AMA__IOSCRASH_REPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__ioscrash_report__descriptor) \
, NULL, 0,NULL, NULL, NULL }


/* Ama__IOSCrashReport__BytesPair methods */
void   ama__ioscrash_report__bytes_pair__init
                     (Ama__IOSCrashReport__BytesPair         *message);
/* Ama__IOSCrashReport__Info__VirtualMachineInfo methods */
void   ama__ioscrash_report__info__virtual_machine_info__init
                     (Ama__IOSCrashReport__Info__VirtualMachineInfo         *message);
/* Ama__IOSCrashReport__Info methods */
void   ama__ioscrash_report__info__init
                     (Ama__IOSCrashReport__Info         *message);
/* Ama__IOSCrashReport__BinaryImage methods */
void   ama__ioscrash_report__binary_image__init
                     (Ama__IOSCrashReport__BinaryImage         *message);
/* Ama__IOSCrashReport__System__Memory methods */
void   ama__ioscrash_report__system__memory__init
                     (Ama__IOSCrashReport__System__Memory         *message);
/* Ama__IOSCrashReport__System__ApplicationStats methods */
void   ama__ioscrash_report__system__application_stats__init
                     (Ama__IOSCrashReport__System__ApplicationStats         *message);
/* Ama__IOSCrashReport__System methods */
void   ama__ioscrash_report__system__init
                     (Ama__IOSCrashReport__System         *message);
/* Ama__IOSCrashReport__Crash__Backtrace__Frame methods */
void   ama__ioscrash_report__crash__backtrace__frame__init
                     (Ama__IOSCrashReport__Crash__Backtrace__Frame         *message);
/* Ama__IOSCrashReport__Crash__Backtrace methods */
void   ama__ioscrash_report__crash__backtrace__init
                     (Ama__IOSCrashReport__Crash__Backtrace         *message);
/* Ama__IOSCrashReport__Crash__Error__Mach methods */
void   ama__ioscrash_report__crash__error__mach__init
                     (Ama__IOSCrashReport__Crash__Error__Mach         *message);
/* Ama__IOSCrashReport__Crash__Error__Signal methods */
void   ama__ioscrash_report__crash__error__signal__init
                     (Ama__IOSCrashReport__Crash__Error__Signal         *message);
/* Ama__IOSCrashReport__Crash__Error__NsException methods */
void   ama__ioscrash_report__crash__error__ns_exception__init
                     (Ama__IOSCrashReport__Crash__Error__NsException         *message);
/* Ama__IOSCrashReport__Crash__Error__CppException methods */
void   ama__ioscrash_report__crash__error__cpp_exception__init
                     (Ama__IOSCrashReport__Crash__Error__CppException         *message);
/* Ama__IOSCrashReport__Crash__Error__NonFatal__Custom methods */
void   ama__ioscrash_report__crash__error__non_fatal__custom__init
                     (Ama__IOSCrashReport__Crash__Error__NonFatal__Custom         *message);
/* Ama__IOSCrashReport__Crash__Error__NonFatal__VirtualMachineError methods */
void   ama__ioscrash_report__crash__error__non_fatal__virtual_machine_error__init
                     (Ama__IOSCrashReport__Crash__Error__NonFatal__VirtualMachineError         *message);
/* Ama__IOSCrashReport__Crash__Error__NonFatal__NsError methods */
void   ama__ioscrash_report__crash__error__non_fatal__ns_error__init
                     (Ama__IOSCrashReport__Crash__Error__NonFatal__NsError         *message);
/* Ama__IOSCrashReport__Crash__Error__NonFatal methods */
void   ama__ioscrash_report__crash__error__non_fatal__init
                     (Ama__IOSCrashReport__Crash__Error__NonFatal         *message);
/* Ama__IOSCrashReport__Crash__Error__VirtualMachineCrash methods */
void   ama__ioscrash_report__crash__error__virtual_machine_crash__init
                     (Ama__IOSCrashReport__Crash__Error__VirtualMachineCrash         *message);
/* Ama__IOSCrashReport__Crash__Error methods */
void   ama__ioscrash_report__crash__error__init
                     (Ama__IOSCrashReport__Crash__Error         *message);
/* Ama__IOSCrashReport__Crash__Thread__Registers__Register methods */
void   ama__ioscrash_report__crash__thread__registers__register__init
                     (Ama__IOSCrashReport__Crash__Thread__Registers__Register         *message);
/* Ama__IOSCrashReport__Crash__Thread__Registers methods */
void   ama__ioscrash_report__crash__thread__registers__init
                     (Ama__IOSCrashReport__Crash__Thread__Registers         *message);
/* Ama__IOSCrashReport__Crash__Thread__Stack methods */
void   ama__ioscrash_report__crash__thread__stack__init
                     (Ama__IOSCrashReport__Crash__Thread__Stack         *message);
/* Ama__IOSCrashReport__Crash__Thread methods */
void   ama__ioscrash_report__crash__thread__init
                     (Ama__IOSCrashReport__Crash__Thread         *message);
/* Ama__IOSCrashReport__Crash methods */
void   ama__ioscrash_report__crash__init
                     (Ama__IOSCrashReport__Crash         *message);
/* Ama__IOSCrashReport methods */
void   ama__ioscrash_report__init
                     (Ama__IOSCrashReport         *message);
size_t ama__ioscrash_report__get_packed_size
                     (const Ama__IOSCrashReport   *message);
size_t ama__ioscrash_report__pack
                     (const Ama__IOSCrashReport   *message,
                      uint8_t             *out);
size_t ama__ioscrash_report__pack_to_buffer
                     (const Ama__IOSCrashReport   *message,
                      ProtobufCBuffer     *buffer);
Ama__IOSCrashReport *
       ama__ioscrash_report__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ama__ioscrash_report__free_unpacked
                     (Ama__IOSCrashReport *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ama__IOSCrashReport__BytesPair_Closure)
                 (const Ama__IOSCrashReport__BytesPair *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Info__VirtualMachineInfo_Closure)
                 (const Ama__IOSCrashReport__Info__VirtualMachineInfo *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Info_Closure)
                 (const Ama__IOSCrashReport__Info *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__BinaryImage_Closure)
                 (const Ama__IOSCrashReport__BinaryImage *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__System__Memory_Closure)
                 (const Ama__IOSCrashReport__System__Memory *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__System__ApplicationStats_Closure)
                 (const Ama__IOSCrashReport__System__ApplicationStats *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__System_Closure)
                 (const Ama__IOSCrashReport__System *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Backtrace__Frame_Closure)
                 (const Ama__IOSCrashReport__Crash__Backtrace__Frame *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Backtrace_Closure)
                 (const Ama__IOSCrashReport__Crash__Backtrace *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Error__Mach_Closure)
                 (const Ama__IOSCrashReport__Crash__Error__Mach *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Error__Signal_Closure)
                 (const Ama__IOSCrashReport__Crash__Error__Signal *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Error__NsException_Closure)
                 (const Ama__IOSCrashReport__Crash__Error__NsException *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Error__CppException_Closure)
                 (const Ama__IOSCrashReport__Crash__Error__CppException *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Error__NonFatal__Custom_Closure)
                 (const Ama__IOSCrashReport__Crash__Error__NonFatal__Custom *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Error__NonFatal__VirtualMachineError_Closure)
                 (const Ama__IOSCrashReport__Crash__Error__NonFatal__VirtualMachineError *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Error__NonFatal__NsError_Closure)
                 (const Ama__IOSCrashReport__Crash__Error__NonFatal__NsError *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Error__NonFatal_Closure)
                 (const Ama__IOSCrashReport__Crash__Error__NonFatal *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Error__VirtualMachineCrash_Closure)
                 (const Ama__IOSCrashReport__Crash__Error__VirtualMachineCrash *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Error_Closure)
                 (const Ama__IOSCrashReport__Crash__Error *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Thread__Registers__Register_Closure)
                 (const Ama__IOSCrashReport__Crash__Thread__Registers__Register *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Thread__Registers_Closure)
                 (const Ama__IOSCrashReport__Crash__Thread__Registers *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Thread__Stack_Closure)
                 (const Ama__IOSCrashReport__Crash__Thread__Stack *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash__Thread_Closure)
                 (const Ama__IOSCrashReport__Crash__Thread *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport__Crash_Closure)
                 (const Ama__IOSCrashReport__Crash *message,
                  void *closure_data);
typedef void (*Ama__IOSCrashReport_Closure)
                 (const Ama__IOSCrashReport *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ama__ioscrash_report__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__bytes_pair__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__info__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__info__virtual_machine_info__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__binary_image__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__system__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__system__memory__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__system__application_stats__descriptor;
extern const ProtobufCEnumDescriptor    ama__ioscrash_report__system__build_type__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__backtrace__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__backtrace__frame__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__error__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__error__mach__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__error__signal__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__error__ns_exception__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__error__cpp_exception__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__error__non_fatal__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__error__non_fatal__custom__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__error__non_fatal__virtual_machine_error__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__error__non_fatal__ns_error__descriptor;
extern const ProtobufCEnumDescriptor    ama__ioscrash_report__crash__error__non_fatal__non_fatal_type__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__error__virtual_machine_crash__descriptor;
extern const ProtobufCEnumDescriptor    ama__ioscrash_report__crash__error__crash_type__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__thread__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__thread__registers__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__thread__registers__register__descriptor;
extern const ProtobufCMessageDescriptor ama__ioscrash_report__crash__thread__stack__descriptor;
extern const ProtobufCEnumDescriptor    ama__ioscrash_report__crash__thread__stack__grow_direction__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_Crash_2eproto__INCLUDED */
