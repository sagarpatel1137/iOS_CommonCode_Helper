/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: Revenue.proto */

#ifndef PROTOBUF_C_Revenue_2eproto__INCLUDED
#define PROTOBUF_C_Revenue_2eproto__INCLUDED

#include <AppMetricaProtobuf/AppMetricaProtobuf.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Ama__Revenue Ama__Revenue;
typedef struct Ama__Revenue__Receipt Ama__Revenue__Receipt;
typedef struct Ama__Revenue__Transaction Ama__Revenue__Transaction;
typedef struct Ama__Revenue__SubscriptionInfo Ama__Revenue__SubscriptionInfo;
typedef struct Ama__Revenue__SubscriptionInfo__Period Ama__Revenue__SubscriptionInfo__Period;
typedef struct Ama__Revenue__SubscriptionInfo__Introductory Ama__Revenue__SubscriptionInfo__Introductory;


/* --- enums --- */

typedef enum _Ama__Revenue__Transaction__State {
  AMA__REVENUE__TRANSACTION__STATE__STATE_UNDEFINED = 0,
  AMA__REVENUE__TRANSACTION__STATE__PURCHASED = 1,
  AMA__REVENUE__TRANSACTION__STATE__RESTORED = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(AMA__REVENUE__TRANSACTION__STATE)
} Ama__Revenue__Transaction__State;
typedef enum _Ama__Revenue__SubscriptionInfo__Period__TimeUnit {
  AMA__REVENUE__SUBSCRIPTION_INFO__PERIOD__TIME_UNIT__UNKNOWN = 0,
  AMA__REVENUE__SUBSCRIPTION_INFO__PERIOD__TIME_UNIT__DAY = 1,
  AMA__REVENUE__SUBSCRIPTION_INFO__PERIOD__TIME_UNIT__WEEK = 2,
  AMA__REVENUE__SUBSCRIPTION_INFO__PERIOD__TIME_UNIT__MONTH = 3,
  AMA__REVENUE__SUBSCRIPTION_INFO__PERIOD__TIME_UNIT__YEAR = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(AMA__REVENUE__SUBSCRIPTION_INFO__PERIOD__TIME_UNIT)
} Ama__Revenue__SubscriptionInfo__Period__TimeUnit;
typedef enum _Ama__Revenue__BuyerDevice {
  AMA__REVENUE__BUYER_DEVICE__BUYER_UNDEFINED = 0,
  AMA__REVENUE__BUYER_DEVICE__THIS = 1,
  AMA__REVENUE__BUYER_DEVICE__ANOTHER = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(AMA__REVENUE__BUYER_DEVICE)
} Ama__Revenue__BuyerDevice;
typedef enum _Ama__Revenue__InAppType {
  AMA__REVENUE__IN_APP_TYPE__PURCHASE = 1,
  AMA__REVENUE__IN_APP_TYPE__SUBSCRIPTION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(AMA__REVENUE__IN_APP_TYPE)
} Ama__Revenue__InAppType;

/* --- messages --- */

struct  Ama__Revenue__Receipt
{
  ProtobufCMessage base;
  /*
   * binary object without any encoding or compression
   */
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
  /*
   * to determine transaction within receipt
   */
  protobuf_c_boolean has_transaction_id;
  ProtobufCBinaryData transaction_id;
};
#define AMA__REVENUE__RECEIPT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__revenue__receipt__descriptor) \
, 0, {0,NULL}, 0, {0,NULL} }


struct  Ama__Revenue__Transaction
{
  ProtobufCMessage base;
  /*
   * id of transaction that brought money. See also secondary_id
   */
  protobuf_c_boolean has_id;
  ProtobufCBinaryData id;
  /*
   * transaction time in seconds
   */
  protobuf_c_boolean has_time;
  uint64_t time;
  /*
   * iOS only
   */
  protobuf_c_boolean has_state;
  Ama__Revenue__Transaction__State state;
  /*
   * id of secondary transaction. For example, id of restored purchase or id of subscription transaction is this is renewal
   */
  protobuf_c_boolean has_secondary_id;
  ProtobufCBinaryData secondary_id;
  /*
   * time of original transaction in seconds. See secondary_id
   */
  protobuf_c_boolean has_secondary_time;
  uint64_t secondary_time;
};
#define AMA__REVENUE__TRANSACTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__revenue__transaction__descriptor) \
, 0, {0,NULL}, 0, 0, 0, AMA__REVENUE__TRANSACTION__STATE__STATE_UNDEFINED, 0, {0,NULL}, 0, 0 }


struct  Ama__Revenue__SubscriptionInfo__Period
{
  ProtobufCMessage base;
  protobuf_c_boolean has_number;
  uint32_t number;
  protobuf_c_boolean has_time_unit;
  Ama__Revenue__SubscriptionInfo__Period__TimeUnit time_unit;
};
#define AMA__REVENUE__SUBSCRIPTION_INFO__PERIOD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__revenue__subscription_info__period__descriptor) \
, 0, 0, 0, AMA__REVENUE__SUBSCRIPTION_INFO__PERIOD__TIME_UNIT__UNKNOWN }


struct  Ama__Revenue__SubscriptionInfo__Introductory
{
  ProtobufCMessage base;
  protobuf_c_boolean has_price_micros;
  int64_t price_micros;
  Ama__Revenue__SubscriptionInfo__Period *period;
  protobuf_c_boolean has_number_of_periods;
  uint32_t number_of_periods;
  protobuf_c_boolean has_id;
  ProtobufCBinaryData id;
};
#define AMA__REVENUE__SUBSCRIPTION_INFO__INTRODUCTORY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__revenue__subscription_info__introductory__descriptor) \
, 0, 0, NULL, 0, 0, 0, {0,NULL} }


struct  Ama__Revenue__SubscriptionInfo
{
  ProtobufCMessage base;
  protobuf_c_boolean has_auto_renewing;
  protobuf_c_boolean auto_renewing;
  Ama__Revenue__SubscriptionInfo__Period *subscription_period;
  Ama__Revenue__SubscriptionInfo__Introductory *introductory_info;
};
#define AMA__REVENUE__SUBSCRIPTION_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__revenue__subscription_info__descriptor) \
, 0, 0, NULL, NULL }


struct  Ama__Revenue
{
  ProtobufCMessage base;
  protobuf_c_boolean has_quantity;
  uint32_t quantity;
  /*
   * ISO 4217
   */
  ProtobufCBinaryData currency;
  /*
   * arbitrary string
   */
  protobuf_c_boolean has_product_id;
  ProtobufCBinaryData product_id;
  /*
   * arbitrary JSON, same rules as for EVENT_CLIENT
   */
  protobuf_c_boolean has_payload;
  ProtobufCBinaryData payload;
  /*
   * data for revenue validation
   */
  Ama__Revenue__Receipt *receipt;
  /*
   * Price value in micros(price * 10^6).
   */
  protobuf_c_boolean has_price_micros;
  int64_t price_micros;
  protobuf_c_boolean has_auto_collected;
  protobuf_c_boolean auto_collected;
  protobuf_c_boolean has_in_app_type;
  Ama__Revenue__InAppType in_app_type;
  Ama__Revenue__Transaction *transaction_info;
  Ama__Revenue__SubscriptionInfo *subscription_info;
};
#define AMA__REVENUE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__revenue__descriptor) \
, 0, 1u, {0,NULL}, 0, {0,NULL}, 0, {0,NULL}, NULL, 0, 0, 0, 0, 0, AMA__REVENUE__IN_APP_TYPE__PURCHASE, NULL, NULL }


/* Ama__Revenue__Receipt methods */
void   ama__revenue__receipt__init
                     (Ama__Revenue__Receipt         *message);
/* Ama__Revenue__Transaction methods */
void   ama__revenue__transaction__init
                     (Ama__Revenue__Transaction         *message);
/* Ama__Revenue__SubscriptionInfo__Period methods */
void   ama__revenue__subscription_info__period__init
                     (Ama__Revenue__SubscriptionInfo__Period         *message);
/* Ama__Revenue__SubscriptionInfo__Introductory methods */
void   ama__revenue__subscription_info__introductory__init
                     (Ama__Revenue__SubscriptionInfo__Introductory         *message);
/* Ama__Revenue__SubscriptionInfo methods */
void   ama__revenue__subscription_info__init
                     (Ama__Revenue__SubscriptionInfo         *message);
/* Ama__Revenue methods */
void   ama__revenue__init
                     (Ama__Revenue         *message);
size_t ama__revenue__get_packed_size
                     (const Ama__Revenue   *message);
size_t ama__revenue__pack
                     (const Ama__Revenue   *message,
                      uint8_t             *out);
size_t ama__revenue__pack_to_buffer
                     (const Ama__Revenue   *message,
                      ProtobufCBuffer     *buffer);
Ama__Revenue *
       ama__revenue__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ama__revenue__free_unpacked
                     (Ama__Revenue *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ama__Revenue__Receipt_Closure)
                 (const Ama__Revenue__Receipt *message,
                  void *closure_data);
typedef void (*Ama__Revenue__Transaction_Closure)
                 (const Ama__Revenue__Transaction *message,
                  void *closure_data);
typedef void (*Ama__Revenue__SubscriptionInfo__Period_Closure)
                 (const Ama__Revenue__SubscriptionInfo__Period *message,
                  void *closure_data);
typedef void (*Ama__Revenue__SubscriptionInfo__Introductory_Closure)
                 (const Ama__Revenue__SubscriptionInfo__Introductory *message,
                  void *closure_data);
typedef void (*Ama__Revenue__SubscriptionInfo_Closure)
                 (const Ama__Revenue__SubscriptionInfo *message,
                  void *closure_data);
typedef void (*Ama__Revenue_Closure)
                 (const Ama__Revenue *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ama__revenue__descriptor;
extern const ProtobufCMessageDescriptor ama__revenue__receipt__descriptor;
extern const ProtobufCMessageDescriptor ama__revenue__transaction__descriptor;
extern const ProtobufCEnumDescriptor    ama__revenue__transaction__state__descriptor;
extern const ProtobufCMessageDescriptor ama__revenue__subscription_info__descriptor;
extern const ProtobufCMessageDescriptor ama__revenue__subscription_info__period__descriptor;
extern const ProtobufCEnumDescriptor    ama__revenue__subscription_info__period__time_unit__descriptor;
extern const ProtobufCMessageDescriptor ama__revenue__subscription_info__introductory__descriptor;
extern const ProtobufCEnumDescriptor    ama__revenue__buyer_device__descriptor;
extern const ProtobufCEnumDescriptor    ama__revenue__in_app_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_Revenue_2eproto__INCLUDED */
