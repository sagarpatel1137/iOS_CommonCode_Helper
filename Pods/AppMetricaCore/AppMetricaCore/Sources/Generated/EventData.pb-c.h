/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: EventData.proto */

#ifndef PROTOBUF_C_EventData_2eproto__INCLUDED
#define PROTOBUF_C_EventData_2eproto__INCLUDED

#include <AppMetricaProtobuf/AppMetricaProtobuf.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Ama__EventData Ama__EventData;
typedef struct Ama__EventData__Payload Ama__EventData__Payload;
typedef struct Ama__EventData__Location Ama__EventData__Location;
typedef struct Ama__EventData__ExtraEntry Ama__EventData__ExtraEntry;


/* --- enums --- */

typedef enum _Ama__EventData__Payload__EncryptionType {
  AMA__EVENT_DATA__PAYLOAD__ENCRYPTION_TYPE__NONE = 0,
  AMA__EVENT_DATA__PAYLOAD__ENCRYPTION_TYPE__AES = 1,
  AMA__EVENT_DATA__PAYLOAD__ENCRYPTION_TYPE__RSA_AES = 2,
  AMA__EVENT_DATA__PAYLOAD__ENCRYPTION_TYPE__GZIP = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(AMA__EVENT_DATA__PAYLOAD__ENCRYPTION_TYPE)
} Ama__EventData__Payload__EncryptionType;
typedef enum _Ama__EventData__Payload__ValueType {
  AMA__EVENT_DATA__PAYLOAD__VALUE_TYPE__EMPTY = 0,
  AMA__EVENT_DATA__PAYLOAD__VALUE_TYPE__STRING = 1,
  AMA__EVENT_DATA__PAYLOAD__VALUE_TYPE__BINARY = 2,
  AMA__EVENT_DATA__PAYLOAD__VALUE_TYPE__FILE = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(AMA__EVENT_DATA__PAYLOAD__VALUE_TYPE)
} Ama__EventData__Payload__ValueType;
typedef enum _Ama__EventData__EventSource {
  AMA__EVENT_DATA__EVENT_SOURCE__NATIVE = 0,
  AMA__EVENT_DATA__EVENT_SOURCE__JS = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(AMA__EVENT_DATA__EVENT_SOURCE)
} Ama__EventData__EventSource;

/* --- messages --- */

struct  Ama__EventData__Payload
{
  ProtobufCMessage base;
  protobuf_c_boolean has_name;
  ProtobufCBinaryData name;
  Ama__EventData__Payload__ValueType value_type;
  protobuf_c_boolean has_value_data;
  ProtobufCBinaryData value_data;
  Ama__EventData__Payload__EncryptionType encryption_type;
  uint32_t bytes_truncated;
};
#define AMA__EVENT_DATA__PAYLOAD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__event_data__payload__descriptor) \
, 0, {0,NULL}, AMA__EVENT_DATA__PAYLOAD__VALUE_TYPE__EMPTY, 0, {0,NULL}, AMA__EVENT_DATA__PAYLOAD__ENCRYPTION_TYPE__NONE, 0 }


struct  Ama__EventData__Location
{
  ProtobufCMessage base;
  double latitude;
  double longitude;
  double altitude;
  protobuf_c_boolean has_timestamp;
  double timestamp;
  double horizontal_accuracy;
  double vertical_accuracy;
  double direction;
  double speed;
};
#define AMA__EVENT_DATA__LOCATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__event_data__location__descriptor) \
, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


struct  Ama__EventData__ExtraEntry
{
  ProtobufCMessage base;
  ProtobufCBinaryData key;
  ProtobufCBinaryData value;
};
#define AMA__EVENT_DATA__EXTRA_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__event_data__extra_entry__descriptor) \
, {0,NULL}, {0,NULL} }


struct  Ama__EventData
{
  ProtobufCMessage base;
  Ama__EventData__Payload *payload;
  double time_offset;
  uint32_t global_number;
  uint32_t number_of_type;
  protobuf_c_boolean has_first_occurrence;
  protobuf_c_boolean first_occurrence;
  Ama__EventData__Location *location;
  protobuf_c_boolean has_location_enabled;
  protobuf_c_boolean location_enabled;
  protobuf_c_boolean has_user_profile_id;
  ProtobufCBinaryData user_profile_id;
  /*
   * JSON-string with one-level dictionary
   */
  protobuf_c_boolean has_app_environment;
  ProtobufCBinaryData app_environment;
  /*
   * JSON-string with one-level dictionary
   */
  protobuf_c_boolean has_event_environment;
  ProtobufCBinaryData event_environment;
  protobuf_c_boolean has_source;
  Ama__EventData__EventSource source;
  protobuf_c_boolean has_attribution_id_changed;
  protobuf_c_boolean attribution_id_changed;
  protobuf_c_boolean has_open_id;
  uint64_t open_id;
  size_t n_extras;
  Ama__EventData__ExtraEntry **extras;
};
#define AMA__EVENT_DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ama__event_data__descriptor) \
, NULL, 0, 0, 0, 0, 0, NULL, 0, 0, 0, {0,NULL}, 0, {0,NULL}, 0, {0,NULL}, 0, AMA__EVENT_DATA__EVENT_SOURCE__NATIVE, 0, 0, 0, 1ull, 0,NULL }


/* Ama__EventData__Payload methods */
void   ama__event_data__payload__init
                     (Ama__EventData__Payload         *message);
/* Ama__EventData__Location methods */
void   ama__event_data__location__init
                     (Ama__EventData__Location         *message);
/* Ama__EventData__ExtraEntry methods */
void   ama__event_data__extra_entry__init
                     (Ama__EventData__ExtraEntry         *message);
/* Ama__EventData methods */
void   ama__event_data__init
                     (Ama__EventData         *message);
size_t ama__event_data__get_packed_size
                     (const Ama__EventData   *message);
size_t ama__event_data__pack
                     (const Ama__EventData   *message,
                      uint8_t             *out);
size_t ama__event_data__pack_to_buffer
                     (const Ama__EventData   *message,
                      ProtobufCBuffer     *buffer);
Ama__EventData *
       ama__event_data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ama__event_data__free_unpacked
                     (Ama__EventData *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ama__EventData__Payload_Closure)
                 (const Ama__EventData__Payload *message,
                  void *closure_data);
typedef void (*Ama__EventData__Location_Closure)
                 (const Ama__EventData__Location *message,
                  void *closure_data);
typedef void (*Ama__EventData__ExtraEntry_Closure)
                 (const Ama__EventData__ExtraEntry *message,
                  void *closure_data);
typedef void (*Ama__EventData_Closure)
                 (const Ama__EventData *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ama__event_data__descriptor;
extern const ProtobufCMessageDescriptor ama__event_data__payload__descriptor;
extern const ProtobufCEnumDescriptor    ama__event_data__payload__encryption_type__descriptor;
extern const ProtobufCEnumDescriptor    ama__event_data__payload__value_type__descriptor;
extern const ProtobufCMessageDescriptor ama__event_data__location__descriptor;
extern const ProtobufCMessageDescriptor ama__event_data__extra_entry__descriptor;
extern const ProtobufCEnumDescriptor    ama__event_data__event_source__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_EventData_2eproto__INCLUDED */
